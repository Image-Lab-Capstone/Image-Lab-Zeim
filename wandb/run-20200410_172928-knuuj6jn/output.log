Loading files from /data/aszot/kaggle/images_001/images
  0%|                                                                                          | 0/20 [00:00<?, ?it/s] 30%|████████████████████████▌                                                         | 6/20 [00:00<00:00, 55.51it/s] 60%|████████████████████████████████████████████████▌                                | 12/20 [00:00<00:00, 53.80it/s] 95%|████████████████████████████████████████████████████████████████████████████▉    | 19/20 [00:00<00:00, 56.29it/s]100%|█████████████████████████████████████████████████████████████████████████████████| 20/20 [00:00<00:00, 55.29it/s]Loaded 19 images

WARNING: Logging before flag parsing goes to stderr.
W0410 10:29:30.000869 139908667664192 deprecation.py:506] From /home/aszot/miniconda3/lib/python3.7/site-packages/tensorflow/python/ops/init_ops.py:1251: calling VarianceScaling.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.
Instructions for updating:
Call initializer instance with the dtype argument instead of passing it to the constructor
2020-04-10 10:29:30.170750: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
2020-04-10 10:29:30.203094: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3000000000 Hz
2020-04-10 10:29:30.221143: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x559d2bd24490 executing computations on platform Host. Devices:
2020-04-10 10:29:30.221187: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
2020-04-10 10:29:30.248378: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
Epoch 1/10
1/1 [==============================] - 0s 388ms/step - loss: 29.1840 - sparse_categorical_accuracy: 0.2667
Epoch 2/10
1/1 [==============================] - 0s 244ms/step - loss: 516.3696 - sparse_categorical_accuracy: 0.2000
Epoch 3/10
1/1 [==============================] - 0s 112ms/step - loss: 126.3493 - sparse_categorical_accuracy: 0.4000
Epoch 4/10
1/1 [==============================] - 0s 135ms/step - loss: 131.4122 - sparse_categorical_accuracy: 0.1333
Epoch 5/10
1/1 [==============================] - 0s 109ms/step - loss: 62.4997 - sparse_categorical_accuracy: 0.1333
Epoch 6/10
1/1 [==============================] - 0s 113ms/step - loss: 16.7685 - sparse_categorical_accuracy: 0.0667
Epoch 7/10
1/1 [==============================] - 0s 87ms/step - loss: 3.9845 - sparse_categorical_accuracy: 0.4667
Epoch 8/10
1/1 [==============================] - 0s 249ms/step - loss: 1.1339 - sparse_categorical_accuracy: 0.7333
Epoch 9/10
1/1 [==============================] - 0s 56ms/step - loss: 0.8208 - sparse_categorical_accuracy: 0.8000
Epoch 10/10
1/1 [==============================] - 0s 60ms/step - loss: 0.6724 - sparse_categorical_accuracy: 0.9333
1/1 [==============================] - 0s 70ms/step - loss: 4.0484 - sparse_categorical_accuracy: 0.0000e+00
